package kotlincourse.lesson5


//Оператор элвиса - если аргумент слева от оператора = null то использовать значение справа от оператора ?:

//Задание выполняется в виде функций, принимающих один или более аргументов.
//Все функции должны быть вызваны из функции main() в вариантах с null и с вещественным значением.

fun main() {
    soundAttenuation(60.5, null)       //Задача 1
    soundAttenuation(60.5, 2.5)
//    calculatingCostDelivery(null, 55.5)                            //Задача 2
//    calculatingCostDelivery(150.5, 55.5)
//    meteorologMeasure(null)                                        //Задача 3
//    meteorologMeasure(5.5)

}
//Контекст: Вы изучаете физическое явление затухания звука в помещении.
//У вас есть измеренное значение начальной интенсивности звука, но из-за ограничений оборудования данные о коэффициенте затухания иногда могут быть неизвестны.
//Задача: Рассчитать предполагаемую интенсивность звука после затухания.
//Интенсивность звука после затухания пропорциональна начальной интенсивности, умноженной на коэффициент затухания.
// Если коэффициент затухания неизвестен, использовать стандартное значение 0.5.

    fun soundAttenuation (initialIntensity: Double, attenuationСoefficient: Double?) {
        var intencityAfterAttenuation = initialIntensity * (attenuationСoefficient ?: 0.5)
        println(intencityAfterAttenuation)
    }

//Контекст: Клиент оплачивает доставку груза.
//К стоимости доставки добавляется страховка на груз, которая составляет 0,5% от его стоимости.
//В случае, если стоимость не указана, то берётся стандартная стоимость в $50
//Задача: Рассчитать полную стоимость доставки.

//    fun calculatingCostDelivery (delivery: Double?, insurance: Double) {
//        var insurance = delivery ?: 2.5
//        var costDelivery = delivery + insurance
//        println(costDelivery)
//    }

//Контекст: Вы проводите метеорологические измерения.
//Одним из важных показателей является атмосферное давление, которое должно быть зафиксировано.
//Лаборант приносит вам набор показателей, но по пути может что-нибудь потерять. Задача - сообщить об ошибке в случае отсутствия показаний атмосферного давления.

//    fun meteorologMeasure (atmosphericPressure: Double?) {
//        atmosphericPressure ?: throw Exception("Отсутсвие показаний")
//    }
